                          Basic Stuff & Intro [class 1]
                          
http://javascript.crockford.com/

1.  Looping over an object using `for` statement, we should check for this condition:
    if (object.hasOwnProperty(name)) {}
2.  There is no `void` return type for javascript functions, if return nothing function would return `undefined`
3.  We cannot use reserved keywords as property name in object dot notation:
      obj.goto would fail, need to use obj["goto] in such cases
4.  We can create a new object with a linkage to object `o` through function object by: object(o). Linkage provides a simple
    inheritance machanism
5.  All objects are linked directly or in-directly to Object.prototype
6.  Make a new empty object: {}, new Object(), object(Object.prototype) --> {} is the preferred way
7.  delete arr[num] would make a hole in arr, instead if use arr.splice(num, 1) would remove the num & renumbers all the following
    array elements
8.  Functions can store key/value pairs, they can have methods becz functions are objects
9.  If the function is called with too many args, extra args are ignored; if function is called with too few args, the missing
    values are undefined. There is no implicit type checking on the arguments
10. When a function is called, it gets extra parameter along with its arguments called arguments, which is an array like object
11. We can augment basic built-ins by adding method to prototype property of that built-in, like String.prototype
12. Don't use new String(), new Boolean() and new Integer, bcz its of no use instead it jsut wraps values into object containers
13. If we think in a prototypical inheritance way, then we can leverage javascript in a better way
14. In a function body, `this` points to global object while `window` does the same in a web browser
15. Javascript is used in lot of places besides browsers like Mac dashboard, Desktop applications, embedded form etc
16. Javascript dont have block scoping, blocks cant be used for variable scoping. Since it dont have block scoping we should define
    all the variables at the start of a function
17. a == b and a != b are bad because it does a type coersion, a === b and a !== b good way

                                  Theory of DOM [class 2]
1. We should not put type=text/javascript when using src=URL tag, because if program sees src tag then it ignores type tag as it
   trusts the server sending the script
2. Place <script src> as close to the bottom of the body as possible. Also place CSS link as high in the head as possible
3. Minify and gzip the script files ---> has a huge impact on performance of the pages
4. Reduce the number of script files as much as possible
5. Don't use document.write
6. DOM structure is a example of classical binary tree as each node have two pointers, firstChild and nextSibling
7. Practice to write code for --> walkTheDOM() and getElementsByClassName() [at 29:01 video]
8. node.getElementById(string_id), node.getElementsByName(nodeName), node.createElement(tagName), node.cloneNode(),
   node.cloneNode(true) <-- clone an element and all its descendents
   Node elements created this way won't be connected to DOM, i.e. they won't have parent pointer set by default
9. So, linking elements to the DOM: node.appendChild(new), node.insertBefore(new, sibling), node.replaceChild(new, old)
10. Remove elements: node.removeChild(new) <-- remember to remove any event handlers on that object tooo
11. innerHTML: We can compile an HTML code and insert directly into DOM
12. Events: The browser has event-driven, single threaded, asynchronous programming model. Events cause the invocation of
    event handler functions
    Even handler: The handler takes an optional event parameter
13. To prevent the default action of a event handler: set the return value of an event object to false -> e.returnValue = false
14. We need to remove all the event handlers associated on a particular DOM element before we want to detach it from the DOM completely,
    to break the reference counting cycles
    So we need to remove all the event handlers from a node when we call such methods: removeChild, replaceChild, innerHTML etc.
    Try writing the function purgeEventHandlers(node)  [57:00 video]
15. alert(text) is not a javascript function its from DOM. We should not use it with ajax coz it blocks the thread execution
16. window object is also javascript global object

